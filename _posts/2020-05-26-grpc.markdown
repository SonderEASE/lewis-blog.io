---
layout: post
title:  "gRPC"
date:   2020-05-26 22:00:00 +0530
tags:   gRPC web-monitor go
categories: [代码 | Coding]
---
先通过一个小的demo快速地熟悉使用gRPC的方式, 然后我们结合之前的webmonitor实现微服务之间的数据发布与订阅, 最后让我们感受下使用gRPC在多种语言服务之间的高效交互. :star2:

&nbsp;
# why gRPC ?

gRPC 是一个由Google发起的高性能、通用的开源RPC框架, 基于 [**HTTP/2**](https://zh.wikipedia.org/wiki/HTTP/2) 协议传输, 使用 [**Protocol Buffers**](https://zh.wikipedia.org/wiki/Protocol_Buffers) 作为接口描述语言. 常用于 微服务框架下, 多种语言服务之间的高效交互.  

优势:
+ 强大的IDL特性 RPC使用ProtoBuf来定义服务, 性能出众.
+ proto文件生成目标代码，简单易用.
+ 支持多语言.
+ 支持 HTTP/2, 同时也为长时通信提供了基础, 支持流式数据传输(双向支持).


### **流**

RPC 是 **远程函数调用**，因此每次调用的函数参数和返回值不能太大，否则将严重影响每次调用的响应时间。因此传统的RPC方法调用对于上传和下载较大数据量场景并不适合。同时传统RPC模式也不适用于对时间不确定的订阅和发布模式。为此，gRPC框架针对服务器端和客户端分别提供了 **流特性**。

&nbsp;
# 如何使用 gRPC ?

我们假设有一个服务上存着大量的通讯信息, 客户端可以向服务端
